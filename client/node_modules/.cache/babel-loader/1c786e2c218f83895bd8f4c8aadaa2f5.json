{"ast":null,"code":"var _jsxFileName = \"F:\\\\INSTAGRAM CLONE\\\\client\\\\src\\\\components\\\\screens\\\\Profile.js\";\nimport React, { useContext, useState } from 'react';\nimport { useEffect } from 'react';\nimport { UserContext } from '../../App';\n\nconst Profile = () => {\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [mypic, setMypic] = useState([]);\n  const [image, setImage] = useState();\n  useEffect(() => {\n    fetch(\"/mypost\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      // console.log(result)\n      setMypic(result.myposts);\n    });\n  }, []);\n  useEffect(() => {\n    if (image) {\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"upload_preset\", \"insta-clone\");\n      formData.append(\"cloud_name\", \"sitanshu\");\n      fetch(\"https://api.cloudinary.com/v1_1/sitanshu/image/upload\", {\n        method: 'post',\n        body: formData\n      }).then(res => res.json()).then(data => {\n        console.log(data.url);\n        fetch(`/updatepic`, {\n          method: \"put\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n          },\n          body: JSON.stringify({\n            pic: data.url\n          })\n        }).then(res => res.json()).then(result => {\n          console.log(result);\n          localStorage.setItem(\"user\", JSON.stringify({ ...state,\n            pic: result.pic\n          }));\n          dispatch({\n            type: \"UPLOADPIC\",\n            payload: result.pic\n          });\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [image]);\n\n  const updatePhoto = file => {\n    setImage(file);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main_profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-pic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: state ? state.pic : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-field input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Upload Pic\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: event => {\n      setImage(event.target.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-path-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"file-path validate\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, state.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, mypic.length, \" posts\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gallery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, mypic.map(item => /*#__PURE__*/React.createElement(\"img\", {\n    key: item._id,\n    src: item.photo,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["F:/INSTAGRAM CLONE/client/src/components/screens/Profile.js"],"names":["React","useContext","useState","useEffect","UserContext","Profile","state","dispatch","mypic","setMypic","image","setImage","fetch","headers","localStorage","getItem","then","res","json","result","myposts","formData","FormData","append","method","body","data","console","log","url","JSON","stringify","pic","setItem","type","payload","catch","err","updatePhoto","file","event","target","files","name","length","map","item","_id","photo","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBN,UAAU,CAACG,WAAD,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,SAAD,EAAY;AACfC,MAAAA,OAAO,EAAE;AACP,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AADtB;AADM,KAAZ,CAAL,CAIGC,IAJH,CAIQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJf,EAKGF,IALH,CAKQG,MAAM,IAAI;AACd;AACAV,MAAAA,QAAQ,CAACU,MAAM,CAACC,OAAR,CAAR;AACD,KARH;AASD,GAVQ,EAUN,EAVM,CAAT;AAWAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,KAAJ,EAAW;AACT,YAAMW,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBb,KAAxB;AACAW,MAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,aAAjC;AACAF,MAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,UAA9B;AACAX,MAAAA,KAAK,CAAC,uDAAD,EAA0D;AAC7DY,QAAAA,MAAM,EAAE,MADqD;AAE7DC,QAAAA,IAAI,EAAEJ;AAFuD,OAA1D,CAAL,CAGGL,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAIGF,IAJH,CAIQU,IAAI,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAjB;AACAjB,QAAAA,KAAK,CAAE,YAAF,EAAe;AAClBY,UAAAA,MAAM,EAAE,KADU;AAElBX,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEP,6BAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFtB,WAFS;AAMlBU,UAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,GAAG,EAAEN,IAAI,CAACG;AADS,WAAf;AANY,SAAf,CAAL,CASGb,IATH,CASQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATf,EAUGF,IAVH,CAUQG,MAAM,IAAI;AACdQ,UAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACAL,UAAAA,YAAY,CAACmB,OAAb,CAAqB,MAArB,EAA6BH,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGzB,KAAL;AAAY0B,YAAAA,GAAG,EAAEb,MAAM,CAACa;AAAxB,WAAf,CAA7B;AACAzB,UAAAA,QAAQ,CAAC;AAAE2B,YAAAA,IAAI,EAAE,WAAR;AAAqBC,YAAAA,OAAO,EAAEhB,MAAM,CAACa;AAArC,WAAD,CAAR;AACD,SAdH;AAeD,OArBH,EAqBKI,KArBL,CAqBWC,GAAG,IAAI;AACdV,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,OAvBH;AAwBD;AACF,GA/BQ,EA+BN,CAAC3B,KAAD,CA/BM,CAAT;;AAgCA,QAAM4B,WAAW,GAAIC,IAAD,IAAU;AAC5B5B,IAAAA,QAAQ,CAAC4B,IAAD,CAAR;AACD,GAFD;;AAGA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEjC,KAAK,GAAGA,KAAK,CAAC0B,GAAT,GAAe,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGQ,KAAD,IAAW;AAAE7B,MAAAA,QAAQ,CAAC6B,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAR;AAAiC,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,oBAAjB;AAAsC,IAAA,IAAI,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CAFF,CADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKpC,KAAK,CAACqC,IAAX,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKnC,KAAK,CAACoC,MAAX,WADF,CAFF,CAbF,CADF,CADF,eAyBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIpC,KAAK,CAACqC,GAAN,CAAUC,IAAI,iBACZ;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,IAAA,GAAG,EAAED,IAAI,CAACE,KAA9B;AAAqC,IAAA,GAAG,EAAEF,IAAI,CAACG,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CAzBF,CADF;AAoCD,CAtFD;;AAwFA,eAAe5C,OAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { UserContext } from '../../App'\r\n\r\nconst Profile = () => {\r\n  const { state, dispatch } = useContext(UserContext)\r\n  const [mypic, setMypic] = useState([])\r\n  const [image, setImage] = useState()\r\n  useEffect(() => {\r\n    fetch(\"/mypost\", {\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    }).then(res => res.json())\r\n      .then(result => {\r\n        // console.log(result)\r\n        setMypic(result.myposts)\r\n      })\r\n  }, [])\r\n  useEffect(() => {\r\n    if (image) {\r\n      const formData = new FormData()\r\n      formData.append(\"file\", image)\r\n      formData.append(\"upload_preset\", \"insta-clone\")\r\n      formData.append(\"cloud_name\", \"sitanshu\")\r\n      fetch(\"https://api.cloudinary.com/v1_1/sitanshu/image/upload\", {\r\n        method: 'post',\r\n        body: formData\r\n      }).then(res => res.json())\r\n        .then(data => {\r\n          console.log(data.url)\r\n          fetch(`/updatepic`, {\r\n            method: \"put\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n              pic: data.url\r\n            })\r\n          }).then(res => res.json())\r\n            .then(result => {\r\n              console.log(result)\r\n              localStorage.setItem(\"user\", JSON.stringify({ ...state, pic: result.pic }))\r\n              dispatch({ type: \"UPLOADPIC\", payload: result.pic })\r\n            })\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }, [image])\r\n  const updatePhoto = (file) => {\r\n    setImage(file)\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"main_profile\">\r\n        <div className=\"profile\">\r\n          <div className=\"profile-pic\">\r\n            <img src={state ? state.pic : \"\"} />\r\n            <div className=\"file-field input-field\">\r\n              <div className=\"btn\">\r\n                <span>Upload Pic</span>\r\n                <input type=\"file\" onChange={(event) => { setImage(event.target.files[0]) }} />\r\n              </div>\r\n              <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h4>{state.name}</h4>\r\n            <div className=\"profile-status\">\r\n              <h5>{mypic.length} posts</h5>\r\n              {/* <h5>{state.followers.length} followers</h5> */}\r\n              {/* <h5>{state.following.length} followings</h5> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"gallery\">\r\n        {\r\n          mypic.map(item =>\r\n            <img key={item._id} src={item.photo} alt={item.title} />\r\n          )\r\n        }\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}