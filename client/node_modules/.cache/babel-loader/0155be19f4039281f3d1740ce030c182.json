{"ast":null,"code":"var _jsxFileName = \"F:\\\\INSTAGRAM CLONE\\\\client\\\\src\\\\components\\\\screens\\\\Reset.js\";\nimport React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport Alerts from './Alerts';\n\nconst Reset = () => {\n  const history = useHistory();\n  const [email, SetEmail] = useState(\"\");\n  const [alert, SetAlert] = useState({\n    isopen: false,\n    type: '',\n    message: ''\n  });\n\n  const PostData = () => {\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n      return SetAlert({\n        isopen: true,\n        type: \"error\",\n        message: \"Invalid email\"\n      });\n    } else {\n      fetch(\"/reset-password\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n        },\n        body: JSON.stringify({\n          email\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.error) {\n          return SetAlert({\n            isopen: true,\n            type: \"error\",\n            message: data.error\n          });\n        } else {\n          SetAlert({\n            isopen: true,\n            type: \"success\",\n            message: data.message\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mycard \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card auth-card input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"brand-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Instagram\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: event => SetEmail(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn waves-effect waves-light #64b5f6 blue lighten-2\",\n    type: \"submit\",\n    name: \"action\",\n    onClick: () => PostData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Reset password\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 40\n    }\n  }, \"Already have an account?click to sign in\")))), /*#__PURE__*/React.createElement(Alerts, {\n    alert: alert,\n    Setalert: SetAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Reset;","map":{"version":3,"sources":["F:/INSTAGRAM CLONE/client/src/components/screens/Reset.js"],"names":["React","useState","useHistory","Link","Alerts","Reset","history","email","SetEmail","alert","SetAlert","isopen","type","message","PostData","test","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","res","json","data","console","log","error","catch","err","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory,Link } from 'react-router-dom'\r\nimport Alerts from './Alerts'\r\n\r\nconst Reset = () => {\r\n    const history = useHistory()\r\n    const [email, SetEmail] = useState(\"\")\r\n    const [alert, SetAlert] = useState({ isopen: false, type: '', message: '' })\r\n\r\n    const PostData = () => {\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            return SetAlert({ isopen: true, type: \"error\", message: \"Invalid email\" })\r\n\r\n        }\r\n        else {\r\n            fetch(\"/reset-password\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    email\r\n                })\r\n            }).then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    if (data.error) {\r\n                        return SetAlert({isopen:true,type:\"error\",message:data.error})\r\n                    }\r\n                    else {\r\n                        SetAlert({isopen:true,type:\"success\",message:data.message})\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"mycard \">\r\n                <div className=\"card auth-card input-field\">\r\n                    <h2 className=\"brand-logo\">Instagram</h2>\r\n                    <input type=\"text\" placeholder=\"Email\" value={email} onChange={(event) => SetEmail(event.target.value)} ></input>\r\n                    <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" type=\"submit\" name=\"action\" onClick={() => PostData()}>Reset password</button>\r\n                    <Link to=\"/login\"> <h6>Already have an account?click to sign in</h6></Link>\r\n                </div>\r\n            </div>\r\n            <Alerts alert={alert} Setalert={SetAlert} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Reset;\r\n"]},"metadata":{},"sourceType":"module"}