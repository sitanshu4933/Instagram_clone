{"ast":null,"code":"var _jsxFileName = \"F:\\\\INSTAGRAM CLONE\\\\client\\\\src\\\\components\\\\screens\\\\Alerts.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function CustomizedSnackbars(props) {\n  const classes = useStyles();\n  const [isopen, setOpen] = React.useState(props.alert.isopen);\n\n  const handleClose = (event, reason) => {\n    console.log(props.setalert);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    open: isopen,\n    autoHideDuration: 1000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: props.alert.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, props.alert.message)));\n}","map":{"version":3,"sources":["F:/INSTAGRAM CLONE/client/src/components/screens/Alerts.js"],"names":["React","Button","Snackbar","MuiAlert","makeStyles","Alert","props","useStyles","theme","root","width","marginTop","spacing","CustomizedSnackbars","classes","isopen","setOpen","useState","alert","handleClose","event","reason","console","log","setalert","type","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ,iBAAa;AACXC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AADiC,CAAZ,CAAD,CAA5B;AASA,eAAe,SAASC,mBAAT,CAA6BP,KAA7B,EAAoC;AACjD,QAAMQ,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM,CAACQ,MAAD,EAASC,OAAT,IAAoBhB,KAAK,CAACiB,QAAN,CAAeX,KAAK,CAACY,KAAN,CAAYH,MAA3B,CAA1B;;AAGA,QAAMI,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACkB,QAAlB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACL,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEM,MAAhB;AAAwB,IAAA,gBAAgB,EAAE,IAA1C;AAAgD,IAAA,OAAO,EAAEI,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEb,KAAK,CAACY,KAAN,CAAYO,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,KAAK,CAACY,KAAN,CAAYQ,OADf,CADF,CADF,CADF;AASD","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n  const classes = useStyles();\r\n  const [isopen, setOpen] = React.useState(props.alert.isopen);\r\n\r\n  \r\n  const handleClose = (event, reason) => {\r\n    console.log(props.setalert)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isopen} autoHideDuration={1000} onClose={handleClose} >\r\n        <Alert severity={props.alert.type}>\r\n          {props.alert.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}