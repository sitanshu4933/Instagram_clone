{"ast":null,"code":"var _jsxFileName = \"F:\\\\INSTAGRAM CLONE\\\\client\\\\src\\\\components\\\\screens\\\\CreatPost.js\";\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Alerts from './Alerts';\nimport { useHistory } from 'react-router-dom';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}));\n\nconst CreatPost = () => {\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [alert, SetAlert] = useState({\n    isopen: false,\n    type: '',\n    message: ''\n  });\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  useEffect(() => {\n    if (url) {\n      fetch(\"/creatpost\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n        },\n        body: JSON.stringify({\n          title,\n          body,\n          photo: url\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.error) {\n          return /*#__PURE__*/React.createElement(Alerts, {\n            type: \"error\",\n            message: \"Error\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 32\n            }\n          });\n        } else {\n          SetAlert({\n            isopen: true,\n            type: \"success\",\n            message: \"Post created successfully\"\n          });\n          setTimeout(() => {\n            history.push('/');\n          }, 4000);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [url]);\n\n  const postDetails = () => {\n    setOpen(!open);\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    formData.append(\"upload_preset\", \"insta-clone\");\n    formData.append(\"cloud_name\", \"sitanshu\");\n    fetch(\"https://api.cloudinary.com/v1_1/sitanshu/image/upload\", {\n      method: 'post',\n      body: formData\n    }).then(res => res.json()).then(data => {\n      console.log(data.url);\n      setUrl(data.url);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mycard \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card auth-card input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"brand-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Instagram\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: event => SetEmail(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: event => SetPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn waves-effect waves-light #64b5f6 blue lighten-2\",\n    type: \"submit\",\n    name: \"action\",\n    onClick: () => PostData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 41\n    }\n  }, \"New User?click to signup\")))), /*#__PURE__*/React.createElement(Alerts, {\n    alert: alert,\n    Setalert: SetAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Backdrop, {\n    className: classes.backdrop,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default CreatPost;","map":{"version":3,"sources":["F:/INSTAGRAM CLONE/client/src/components/screens/CreatPost.js"],"names":["React","useEffect","useState","TextField","Alerts","useHistory","Backdrop","makeStyles","CircularProgress","useStyles","theme","backdrop","zIndex","drawer","color","CreatPost","history","title","setTitle","body","setBody","image","setImage","url","setUrl","alert","SetAlert","isopen","type","message","classes","open","setOpen","fetch","method","headers","localStorage","getItem","JSON","stringify","photo","then","res","json","data","console","log","error","setTimeout","push","catch","err","postDetails","formData","FormData","append","email","event","SetEmail","target","value","password","SetPassword","PostData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Alerts from './Alerts'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\nconst CreatPost = () => {\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n    const [alert, SetAlert] = useState({ isopen: false, type: '', message: '' })\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            fetch(\"/creatpost\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    photo: url\r\n                })\r\n            }).then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    if (data.error) {\r\n                        return <Alerts type=\"error\" message=\"Error\" />\r\n                    }\r\n                    else {\r\n                        SetAlert({ isopen: true, type: \"success\", message: \"Post created successfully\" })\r\n                        setTimeout(() => {\r\n                            history.push('/')\r\n                        }, 4000);\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }, [url])\r\n    const postDetails = () => {\r\n        setOpen(!open)\r\n        const formData = new FormData()\r\n        formData.append(\"file\", image)\r\n        formData.append(\"upload_preset\", \"insta-clone\")\r\n        formData.append(\"cloud_name\", \"sitanshu\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/sitanshu/image/upload\", {\r\n            method: 'post',\r\n            body: formData\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data.url)\r\n                setUrl(data.url)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n         <div className=\"mycard \">\r\n                <div className=\"card auth-card input-field\">\r\n                    <h2 className=\"brand-logo\">Instagram</h2>\r\n                    <input type=\"text\" placeholder=\"Email\" value={email} onChange={(event) => SetEmail(event.target.value)} ></input>\r\n                    <input type=\"password\" placeholder=\"Password\" value={password} onChange={(event) => SetPassword(event.target.value)} ></input>\r\n                    <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" type=\"submit\" name=\"action\" onClick={() => PostData()}>Login</button>\r\n                    <Link to=\"/signup\"> <h6>New User?click to signup</h6></Link>\r\n                </div>\r\n            </div>\r\n            {/* <div className=\"card input-filed\">\r\n                <TextField label=\"Title\" value={title} onChange={(event) => { setTitle(event.target.value) }} /><br/>\r\n                <TextField label=\"Body\" value={body} onChange={(event) => { setBody(event.target.value) }} />\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn\">\r\n                        <span>Upload Image</span>\r\n                        <input type=\"file\" onChange={(event) => { setImage(event.target.files[0]) }} />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" type=\"submit\" name=\"action\" onClick={() => postDetails()} >Submit</button>\r\n            </div> */}\r\n            <Alerts alert={alert} Setalert={SetAlert} />\r\n            <Backdrop className={classes.backdrop} open={open} >\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </>\r\n    )\r\n}\r\nexport default CreatPost"]},"metadata":{},"sourceType":"module"}