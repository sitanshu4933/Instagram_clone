{"ast":null,"code":"var _jsxFileName = \"F:\\\\INSTAGRAM CLONE\\\\client\\\\src\\\\components\\\\screens\\\\UserProfile.js\";\nimport React, { useContext, useState } from 'react';\nimport { useEffect } from 'react';\nimport { UserContext } from '../../App';\nimport { useParams } from 'react-router-dom';\n\nconst UserProfile = () => {\n  const [UserProfile, setUserProfile] = useState(null);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const {\n    userid\n  } = useParams();\n  console.log(userid);\n  const abortController = new AbortController();\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      fetch(`/user/${userid}`, {\n        headers: {\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n        } // signal: abortController.signal\n\n      }).then(res => res.json()).then(result => {\n        console.log(result); // setUserProfile(result)\n\n        console.log(UserProfile);\n      });\n    } // return function cancel() {\n    //   abortController.abort()\n    // }\n\n  }, []);\n\n  const followUser = () => {\n    fetch(`/follow`, {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: {\n        followId: userid\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      dispatch({\n        type: \"UPDATE\",\n        payload: {\n          following: result.following,\n          followers: result.followers\n        }\n      });\n      localStorage.setItem(\"User\", JSON.stringify(result));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"ehvevuwevb\");\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["F:/INSTAGRAM CLONE/client/src/components/screens/UserProfile.js"],"names":["React","useContext","useState","useEffect","UserContext","useParams","UserProfile","setUserProfile","state","dispatch","userid","console","log","abortController","AbortController","mounted","fetch","headers","localStorage","getItem","then","res","json","result","followUser","method","body","followId","type","payload","following","followers","setItem","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAQC,WAAR,QAA0B,WAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACA,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM;AAACM,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAiBR,UAAU,CAACG,WAAD,CAAjC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAaL,SAAS,EAA5B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAMG,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,OAAO,GAAG,IAAd;;AACA,QAAIA,OAAJ,EAAa;AACXC,MAAAA,KAAK,CAAE,SAAQN,MAAO,EAAjB,EAAoB;AACvBO,QAAAA,OAAO,EAAE;AACP,2BAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AADtB,SADc,CAIvB;;AAJuB,OAApB,CAAL,CAKGC,IALH,CAKQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALf,EAMGF,IANH,CAMQG,MAAM,IAAI;AACdZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,MAAZ,EADc,CAEd;;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACD,OAVH;AAWD,KAda,CAed;AACA;AACA;;AACD,GAlBQ,EAkBN,EAlBM,CAAT;;AAqBA,QAAMkB,UAAU,GAAG,MAAM;AACvBR,IAAAA,KAAK,CAAE,SAAF,EAAY;AACfS,MAAAA,MAAM,EAAE,KADO;AAEfR,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFtB,OAFM;AAMfO,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAEjB;AADN;AANS,KAAZ,CAAL,CASGU,IATH,CASQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATf,EAUGF,IAVH,CAUQG,MAAM,IAAI;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,MAAZ;AACAd,MAAAA,QAAQ,CAAC;AAACmB,QAAAA,IAAI,EAAC,QAAN;AAAgBC,QAAAA,OAAO,EAAC;AAACC,UAAAA,SAAS,EAACP,MAAM,CAACO,SAAlB;AAA4BC,UAAAA,SAAS,EAACR,MAAM,CAACQ;AAA7C;AAAxB,OAAD,CAAR;AACAb,MAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeX,MAAf,CAA5B;AACD,KAdH;AAeD,GAhBD;;AAiBA,sBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAMD,CAlDD;;AAqDA,eAAejB,WAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {UserContext} from '../../App'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst UserProfile = () => {\r\n  const [UserProfile, setUserProfile] = useState(null)\r\n  const {state,dispatch}=useContext(UserContext)\r\n  const { userid } = useParams()\r\n  console.log(userid)\r\n  const abortController = new AbortController()\r\n  useEffect(() => {\r\n    let mounted = true\r\n    if (mounted) {\r\n      fetch(`/user/${userid}`, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n        },\r\n        // signal: abortController.signal\r\n      }).then(res => res.json())\r\n        .then(result => {\r\n          console.log(result)\r\n          // setUserProfile(result)\r\n          console.log(UserProfile)\r\n        })\r\n    }\r\n    // return function cancel() {\r\n    //   abortController.abort()\r\n    // }\r\n  }, [])\r\n\r\n\r\n  const followUser = () => {\r\n    fetch(`/follow`, {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: {\r\n        followId: userid\r\n      }\r\n    }).then(res => res.json())\r\n      .then(result => {\r\n        console.log(result)\r\n        dispatch({type:\"UPDATE\", payload:{following:result.following,followers:result.followers}})\r\n        localStorage.setItem(\"User\",JSON.stringify(result))\r\n      })\r\n  }\r\n  return (\r\n    \r\n      \r\n      <h4>ehvevuwevb</h4>\r\n    \r\n  )\r\n}\r\n\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}