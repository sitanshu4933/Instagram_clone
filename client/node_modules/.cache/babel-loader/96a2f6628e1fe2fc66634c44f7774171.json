{"ast":null,"code":"var _jsxFileName = \"F:\\\\INSTAGRAM CLONE\\\\client\\\\src\\\\components\\\\screens\\\\CreatPost.js\";\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Alerts from './Alerts';\nimport { useHistory } from 'react-router-dom';\n\nconst CreatPost = () => {\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [alert, SetAlert] = useState({\n    isopen: false,\n    type: '',\n    message: ''\n  });\n  useEffect(() => {\n    if (url) {\n      fetch(\"/creatpost\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n        },\n        body: JSON.stringify({\n          title,\n          body,\n          photo: url\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.error) {\n          return /*#__PURE__*/React.createElement(Alerts, {\n            type: \"error\",\n            message: \"Error\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 32\n            }\n          });\n        } else {\n          history.push('/');\n          SetAlert({\n            isopen: true,\n            type: \"success\",\n            message: \"Post created successfully\"\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [url]);\n\n  const postDetails = () => {\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    formData.append(\"upload_preset\", \"insta-clone\");\n    formData.append(\"cloud_name\", \"sitanshu\");\n    fetch(\"https://api.cloudinary.com/v1_1/sitanshu/image/upload\", {\n      method: 'post',\n      body: formData\n    }).then(res => res.json()).then(data => {\n      console.log(data.url);\n      setUrl(data.url);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card input-filed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Title\",\n    value: title,\n    onChange: event => {\n      setTitle(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Body\",\n    value: body,\n    onChange: event => {\n      setBody(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-field input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Upload Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: event => {\n      setImage(event.target.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-path-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"file-path validate\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn waves-effect waves-light #64b5f6 blue lighten-2\",\n    type: \"submit\",\n    name: \"action\",\n    onClick: () => postDetails(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(Alerts, {\n    alert: alert,\n    Setalert: SetAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CreatPost;","map":{"version":3,"sources":["F:/INSTAGRAM CLONE/client/src/components/screens/CreatPost.js"],"names":["React","useEffect","useState","TextField","Alerts","useHistory","CreatPost","history","title","setTitle","body","setBody","image","setImage","url","setUrl","alert","SetAlert","isopen","type","message","fetch","method","headers","localStorage","getItem","JSON","stringify","photo","then","res","json","data","console","log","error","push","catch","err","postDetails","formData","FormData","append","event","target","value","files"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Alerts from './Alerts'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst CreatPost = () => {\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n    const [alert, SetAlert] = useState({isopen:false,type:'',message:''})\r\n\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            fetch(\"/creatpost\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    photo: url\r\n                })\r\n            }).then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    if (data.error) {\r\n                        return <Alerts type=\"error\" message=\"Error\" />\r\n                    }\r\n                    else {\r\n                        history.push('/')\r\n                        SetAlert({isopen:true,type:\"success\",message:\"Post created successfully\"})\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }, [url])\r\n    const postDetails = () => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", image)\r\n        formData.append(\"upload_preset\", \"insta-clone\")\r\n        formData.append(\"cloud_name\", \"sitanshu\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/sitanshu/image/upload\", {\r\n            method: 'post',\r\n            body: formData\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data.url)\r\n                setUrl(data.url)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"card input-filed\">\r\n                <TextField label=\"Title\" value={title} onChange={(event) => { setTitle(event.target.value) }} />\r\n                <TextField label=\"Body\" value={body} onChange={(event) => { setBody(event.target.value) }} />\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn\">\r\n                        <span>Upload Image</span>\r\n                        <input type=\"file\" onChange={(event) => { setImage(event.target.files[0]) }} />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\" type=\"submit\" name=\"action\" onClick={() => postDetails()} >Submit</button>\r\n            </div>\r\n            <Alerts alert={alert} Setalert={SetAlert} />\r\n        </>\r\n    )\r\n}\r\nexport default CreatPost"]},"metadata":{},"sourceType":"module"}